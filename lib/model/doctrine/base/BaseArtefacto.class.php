<?php

/**
 * BaseArtefacto
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $nombre
 * @property string $descripcion
 * @property integer $tipo_id
 * @property integer $proyecto_id
 * @property boolean $validado
 * @property Proyecto $Proyecto
 * @property Tipo $Tipo
 * @property Doctrine_Collection $Padres
 * @property Doctrine_Collection $Hijos
 * @property Doctrine_Collection $Ficheros
 * @property Doctrine_Collection $versiones
 * 
 * @method string              getNombre()      Returns the current record's "nombre" value
 * @method string              getDescripcion() Returns the current record's "descripcion" value
 * @method integer             getTipoId()      Returns the current record's "tipo_id" value
 * @method integer             getProyectoId()  Returns the current record's "proyecto_id" value
 * @method boolean             getValidado()    Returns the current record's "validado" value
 * @method Proyecto            getProyecto()    Returns the current record's "Proyecto" value
 * @method Tipo                getTipo()        Returns the current record's "Tipo" value
 * @method Doctrine_Collection getPadres()      Returns the current record's "Padres" collection
 * @method Doctrine_Collection getHijos()       Returns the current record's "Hijos" collection
 * @method Doctrine_Collection getFicheros()    Returns the current record's "Ficheros" collection
 * @method Doctrine_Collection getVersiones()   Returns the current record's "versiones" collection
 * @method Artefacto           setNombre()      Sets the current record's "nombre" value
 * @method Artefacto           setDescripcion() Sets the current record's "descripcion" value
 * @method Artefacto           setTipoId()      Sets the current record's "tipo_id" value
 * @method Artefacto           setProyectoId()  Sets the current record's "proyecto_id" value
 * @method Artefacto           setValidado()    Sets the current record's "validado" value
 * @method Artefacto           setProyecto()    Sets the current record's "Proyecto" value
 * @method Artefacto           setTipo()        Sets the current record's "Tipo" value
 * @method Artefacto           setPadres()      Sets the current record's "Padres" collection
 * @method Artefacto           setHijos()       Sets the current record's "Hijos" collection
 * @method Artefacto           setFicheros()    Sets the current record's "Ficheros" collection
 * @method Artefacto           setVersiones()   Sets the current record's "versiones" collection
 * 
 * @package    gestor
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7691 2011-02-04 15:43:29Z jwage $
 */
abstract class BaseArtefacto extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('artefacto');
        $this->hasColumn('nombre', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('descripcion', 'string', 4000, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 4000,
             ));
        $this->hasColumn('tipo_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('proyecto_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('validado', 'boolean', null, array(
             'type' => 'boolean',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Proyecto', array(
             'local' => 'proyecto_id',
             'foreign' => 'id'));

        $this->hasOne('Tipo', array(
             'local' => 'tipo_id',
             'foreign' => 'id'));

        $this->hasMany('Artefacto as Padres', array(
             'refClass' => 'Relaciones',
             'local' => 'padre_id',
             'foreign' => 'hijo_id'));

        $this->hasMany('Artefacto as Hijos', array(
             'refClass' => 'Relaciones',
             'local' => 'hijo_id',
             'foreign' => 'padre_id'));

        $this->hasMany('FicherosArt as Ficheros', array(
             'local' => 'id',
             'foreign' => 'artefactoid'));

        $this->hasMany('Version as versiones', array(
             'local' => 'id',
             'foreign' => 'artefacto_id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $versionable0 = new Doctrine_Template_Versionable(array(
             ));
        $this->actAs($timestampable0);
        $this->actAs($versionable0);
    }
}